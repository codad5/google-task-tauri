/* eslint-disable */
// This file was generated by [tauri-specta](https://github.com/oscartbeaumont/tauri-specta). Do not edit this file manually.

declare global {
    interface Window {
        __TAURI_INVOKE__<T>(cmd: string, args?: Record<string, unknown>): Promise<T>;
    }
}

// Function avoids 'window not defined' in SSR
const invoke = () => window.__TAURI_INVOKE__;

export function saveAccessToken(token: string) {
    return invoke()<SaveAccessTokenResponse>("save_access_token", { token })
}

export function loadAccessToken() {
    return invoke()<AccessToken>("load_access_token")
}

export function greet(name: string) {
    return invoke()<GreetResponse>("greet", { name })
}

export function testCommand() {
    return invoke()<string>("test_command")
}

export function saveCode(code: string) {
    return invoke()<SaveTokenResponse>("save_code", { code })
}

export function loadCode() {
    return invoke()<string>("load_code")
}

export type GreetResponse = { message: string }
export type SaveTokenResponse = { message: string; token: string; success: boolean }
export type SaveAccessTokenResponse = { message: string; success: boolean; token: AccessToken }
export type AccessToken = { access_token: string; expires_in: number; refresh_token: string; scope: string; token_type: string; id_token: string }
